<?php
/**
 * @file
 * The core that allows a student to submit his information via a form
 */
function tellafriend_block_view($delta = '') {
        // Create an array that will be returned as our block
        $block = array();
 
        
        switch($delta) {
                case 'tellafriend_form':
                        $block['subject'] = t('Tell A Friend');
                        $block['content'] = drupal_get_form('student_reg_registrationform');
                break;
        }
 
        // Finally, we return the $block array.
        return $block;
}
/**
 * Implementation of hook_menu().
 */
function student_reg_menu() {
  $items['add-student-data'] = array(
  'title' => t('Your Students'),
      //  'type' => MENU_CALLBACK,
      //  'access arguments' => array('access content'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          'student_registrationform'
      ),
      'access callback' => TRUE
  );
  
  $items['list-student-data'] = array(
      // 'title' => t('Your Projects'),
      'description' => 'Your Sleetmute FPA Projects',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          'get_student_listing_form'
      ),
      'access arguments' => array(
          'access content'
      ),
      // 'type' => MENU_NORMAL_ITEM
  );
  
  return $items;
}


function get_student_listing_form() {
  $header = array(
    array(
      'data' => t('Name'),
      'field' => 'name'
    ),
    array(
      'data' => t('Email'),
      'field' => 'email'
    ),
    array(
      'data' => t('Age'),
      'field' => 'age'
    ),
    array(
      'data' => t('Sex'),
      'field' => 'sex'
    ),
    array(
      'data' => t('Country'),
      'field' => 'country'
    ),
    array(
      'data' => t('Updated'), 
      'field' => 'created', 
      'sort' => 'desc'
    )
  );
  
  
  $data = array();
  
  # set the database table
  $query = db_select('student_info', 's')->extend('PagerDefault')->extend('TableSort') ->orderByHeader($header);
  
  # configure the query
  $query->fields('s', array(
      'name',
      'email',
      'age',
      'sex',
      'country',
      // 'created' => format_date($node->created, 'short')
  ))->limit(3);


 
  # execute the query
  $results = $query->execute();
  $rows    = array();

  foreach ($results as $row) {
    $data[] = array(
      $row->name,
      $row->email,
      $row->age,
      $row->sex,
      $row->country
    );
  }
  $form['nodes'] = array(
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $data,
    '#empty' => t('No content available.'),
  );
  
  $form['pager'] = array('#markup' => theme('pager'));
  return $form;

}

/**
 * Implements hook_form().
 */

function student_reg_registrationform()
{
    $form = array();
    
    
    $form['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter your name'),
        '#required' => TRUE
    );
    
    $form['email'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter your email'),
        '#required' => TRUE
    );
    
    $form['age'] = array(
        '#type' => 'textfield',
        '#title' => t('Enter your Age')
    );
    
    $form['phone'] = array(
        '#type' => 'textfield',
        '#size' => 10,
        '#maxlength' => 8,
        '#title' => t('Enter your Phone number')
    );
    
    $form['sex'] = array(
        '#type' => 'radios',
        '#title' => t('Enter your Sex'),
        '#default_value' => 'Female',
        '#options' => array(
             'NA'=>'NA',
             'Male'=>'Male',
             'Female'=>'Female'
        )
    );
    
    $form['country'] = array(
        '#type' => 'select',
        '#title' => t('Select your country'),
        '#default_value' => 'UK',
        '#options' => array(
            '-Country-' => '-Country-',
            'USA' => 'USA',
            'UK' => 'UK',
            'France' => 'France',
            'Japan' => 'Japan',
            'India' => 'India'
        )
    );
    
    $form['agree'] = array(
        '#type' => 'checkboxes',
        '#title' => t('I agree'),
        '#options' => drupal_map_assoc(array(
            t('Yes')
        )),
        '#required' => TRUE,
        '#prefix' => '<div class="srinidhi">',
        '#suffix' => '</div>'
        
        
    );
    
    $form['subscribe'] = array(
        '#type' => 'checkboxes',
        '#title' => t('I want  to subscribe'),
        '#options' => array(
            t('Yes'),
            t('No'),
            t('May be later')
        )
    );

  // $form['table'] = array(
  // '#type' => 'tableselect',
  // '#header' => $header,
  // '#options' => $rows,
  // );
    $form['submit']    = array(
        '#type' => 'submit',
        '#value' => t('Submit')
    );
    $form['#validate'] = array(
        'student_registrationform_validation'
    );
    
    return $form;
}
/**
 * Implementation of hook_submit().
 */
function student_reg_registrationform_submit($form, &$form_state)
{
    
    dpm($form_state['values']);
    
    // db_query("INSERT INTO {my_student_table} (name, email, age) VALUES ('%s', %s, '%d')", $form_state['values']['name'], $form_state['values']['email'],  $form_state['values']['age']);
    
    // db_query('INSERT INTO {my_student_table} SET name = :name, email = :email, age=:age; WHERE uid = :uid',
    // array(':name' => $name, ':mail' => $mail, ':uid' => $account->uid));
    $timestamp = date('Y-m-d G:i:s');
    $sid = db_insert('student_info')->fields(array(
        'name' => $form_state['values']['name'],
        'email' => $form_state['values']['email'],
        'age' => $form_state['values']['age'],
        'sex' => $form_state['values']['sex'],
        'country' => $form_state['values']['country'],
		'created' => REQUEST_TIME,
    ))->execute();
}
/**
 * Implementation of hook_validation().
 */
function student_reg_registrationform_validation($form, &$form_state)
{
    $mail         = $form_state['values']['email'];
    $age_variable = $form_state['values']['age'];
    $name_var     = $form_state['values']['name'];
    if (!valid_email_address($mail)) {
        form_set_error('email', t('Please Enter a valid email address.'));
    }
    if (!is_numeric($age_variable) && $age_variable != '') {
        form_set_error('age', t('Age field must be Numeric'));
    }
    if (is_numeric($name_var)) {
        form_set_error('name', t('Name field must not be Numeric'));
    }
    if (!preg_match('/^[a-zA-Z0-9_.]+$/u', $name_var)) {
        form_set_error('name', t('The username contains an illegal character. You can use only letters, digits, . and _ . Do not use accents.'));
    }
}